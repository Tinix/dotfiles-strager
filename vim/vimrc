" HACK(strager): Work around LC_ALL=C setting encoding=latin1.
" NOTE(strager): This must come before :scriptencoding. See :help
" scriptencoding.
set encoding=utf-8

scriptencoding utf-8

""" General
set nocompatible

""" Plugins
call strager#move_file#register_command({'force': v:false})

let g:EditorConfig_core_mode = 'vim_core'

let loaded_matchparen = v:true

packloadall

""" Whitespace, indention, etc.
set sw=4 et
set softtabstop=-1
set ts=8
set nosmartindent
set cin noai
set tw=80 cc=80
set nojoinspaces
set formatoptions=cloqr
set cinoptions=l1

let g:EditorConfig_disable_rules = ['trim_trailing_whitespace']

" Copyright Saleem Abdulrasool <compnerd@compnerd.org>
execute 'command! GNUFormat :setlocal '.
  \ 'cinoptions=>2s,n-1s,{s,^-1s,:1s,=1s,g0,h1s,t0,+1s,(0,u0,w1,m1 '.
  \ 'noexpandtab '.
  \ 'shiftwidth=2 '.
  \ 'softtabstop=2 '.
  \ 'tabstop=8'

""" Text manipulation
set bs=indent,eol,start
set completeopt=menu,preview

" Don't synchronize Vim's unnamed register with system clipboard.
set clipboard=

""" Text alignment
""" http://vim.wikia.com/wiki/Regex-based_text_alignment
command! -nargs=? -range Align <line1>,<line2>call strager#align#align_section('<args>')

" Make Y consistent with D (i.e. D : d$ :: Y : y$)
nmap <unique> Y y$

" Make Y behave like y in visual mode.
vmap <unique> Y y

""" Navigation
set nofoldenable
set foldmethod=marker
set nostartofline

" Line number gutter
set norelativenumber
set numberwidth=3

autocmd CmdwinEnter * setlocal norelativenumber

" Sane searching
set hlsearch
set incsearch
set smartcase ignorecase
nmap <silent> <unique> <Leader>l :nohlsearch<CR>

" Save searches
set viminfo+=/10000

" :grep
command -complete=dir -nargs=+
  \ Grep silent grep <args>
  \ | redraw!
  \ | call strager#window#open_quickfix_window()
set grepformat=%f:%l:%c:%m
set grepformat+=%-GNo\ files\ were\ searched\\,\ which\ means\ ripgrep\ probably\ applied\ a\ filter\ you\ didn't\ expect.\ Try\ running\ again\ with\ --debug.
set grepformat+=%-GNo\ files\ were\ searched\\,\ which\ means\ ripgrep\ probably\ applied\ a\ filter\ you\ didn't\ expect.
set grepformat+=%-GRunning\ with\ --debug\ will\ show\ why\ files\ are\ being\ skipped.
set grepprg=rg
if has('unix')
  set grepprg+=\ \</dev/null
endif
set grepprg+=\ --color\ never\ --column\ --line-number\ --no-heading\ $*
nmap <unique> <Leader>a :Grep<SPACE>

" Use tab for %
nnoremap <unique> <tab> %
vnoremap <unique> <tab> %

""" Window and tab management
" Windows
set splitbelow splitright

" Tabs
" Use <Leader>c to pop the "tab stack".
nmap <unique> <Leader>c :tabclose<CR>

let s:i = 1
while s:i <= 10
  execute printf(
    \ 'nnoremap <unique> <Leader>%d :%dtabnext<CR>',
    \ s:i == 10 ? 0 : s:i,
    \ s:i,
  \ )
  let s:i += 1
endwhile

""" File management
set autowrite 

" netrw directory browser
let g:netrw_banner = 0
let g:netrw_list_hide = '^\.\.\?/$'
let g:netrw_liststyle = 0
let g:netrw_use_errorwindow = 0
autocmd BufWritePost * call strager#directory_browser#refresh_open_browsers()
call strager#directory_browser#register_commands()
nnoremap <nowait><silent><unique> - :BrowserUp<CR>

" Don't hide any files from completion.
set wildignore=

" Put swap files in ~/.vim/swap/.  Note the double /:
"
" > - For Unix and Win32, if a directory ends in two path separators "//"
" >  or "\\", the swap file name will be built from the complete path to
" >  the file with all path separators substituted to percent '%' signs.
" >  This will ensure file name uniqueness in the preserve directory.
set directory=~/.vim/swap//,.

" fzf
nmap <unique> <Leader>b :call strager#search_buffers#search_using_fzf()<CR>
nmap <unique> <C-P> :call strager#search_files#search_using_fzf()<CR>

""" Display
set nowrap
set ruler
set laststatus=2
set list
set listchars=
set listchars+=precedes:<,extends:>
set listchars+=tab:â‡¥\ 
set sidescroll=5
set scrolloff=0
set shortmess=a     " Abbreviate status line
set shortmess+=tToO " Other crap

call strager#color_column#set_up_sync_colorcolumn_with_textwidth()

call strager#cursor_shape#set_cursor_shapes({
  \ 'insert': 'vertical bar',
  \ 'normal': 'block',
  \ 'replace': 'underline',
\ })

" filename [Help][-][RO]
set statusline=\ \ \ %<%f\ %h%m%r
" Line, col
set statusline+=%=%(%l,%c%V%)

" Terminal window title
set title
set titlestring=%t
set titleold=

""" Spelling
set spellcapcheck=

""" Command line
set wildmenu
set wildmode=longest,full

" Save history
set history=10000
set viminfo+=:10000

""" Terminal
" Treat undercurl as underline.
set t_Cs= t_Ce=

" Handle <ESC> immediately in insert mode. Wait indefinitely for incomplete
" mappings.
set esckeys
set notimeout ttimeout ttimeoutlen=0
set showcmd

""" Syntax hilighting
syntax on
filetype on
filetype indent on
filetype plugin on

au BufNewFile *.as set filetype=javascript
au BufRead *.as set filetype=javascript

set background=dark
let g:solarized_termtrans=1
colorscheme strager

" Make the vertical split column and the status line blend
" with the line number column. See also colors/strager.vim.
set fillchars+=vert:\ 
" FIXME(strager): This overrides the previous line...
set fillchars=stl:\ ,stlnc:\ 

let c_space_errors=1
let c_no_comment_fold=1
let c_no_if0_fold=1

set concealcursor=nv

""" Shortcuts
map <unique> <F1> <ESC>:make<CR>
set makeprg=make\ -j4\ -w
nmap <unique> <Leader>s vip:sort u<CR>
vmap <unique> <Leader>s :sort u<CR>
nmap <unique> <Leader>S vip:sort iu<CR>
vmap <unique> <Leader>S :sort iu<CR>
map <unique> <Leader>w :wa<CR>

command -range GistLinesToChat call system('chatgist', getbufline('%', <line1>, <line2>))
vnoremap <unique> <F2> :GistLinesToChat<CR>

" Turn off the K command. I keep accidentally triggering it, and I don't care
" for its behavior right now.
nnoremap <unique> K <Nop>

" Paste toggle
nmap <unique> <Leader>p :set paste!<CR>

""" Linting
let g:ale_echo_cursor = v:true
let g:ale_lint_delay = 0
let g:ale_linters_explicit = v:true
let g:ale_set_signs = v:false
let g:ale_lint_on_text_changed = 'always'
if exists('#ALEEvents')
  call ale#events#Init()
endif

" Must be last.  Forgot why.
set exrc secure
