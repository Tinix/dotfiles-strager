[ui]                                                                            
username=Matthew "strager" Glazar <strager.nds@gmail.com>                       
                                                                                
ignore=.stragerignore

[extensions]                                                                    

[experimental]
graphshorten = true

[alias]
l = smartlog --template '{strager_log}' -r 'focusedsmartlog(.)'
ll = smartlog --all --template '{strager_log}'

[pager]
ignore = smartlog

[smartlog]
indentnonpublic = False

[templatealias]
strager_log = "{label(strager_log_top_label, ifeq(phase, 'public', strager_log_public, strager_log_draft))}"
strager_log_top_label = "{ifeq(graphnode, '@', 'strager_log.current',
                          ifeq(graphnode, 'x', 'strager_log.hidden',
                          ifeq(phase, 'public', '',
                               ifeq(phabstatus, 'Abandoned', 'strager_log.abandoned',
                               ifeq(phabstatus, 'Committed', 'strager_log.committed',
                                    '')))))}"

strager_log_draft = "{strager_log_draft_node}{separate(' ', strager_log_phabricator_revision, strager_log_description)}{strager_log_successors}"
strager_log_draft_node = "{strager_log_graph_align(strager_log_node)}"

strager_log_successors = "{ifeq(graphnode, 'x', ' ({strager_log_successors_noun}: {strager_log_successor_nodes})', '')}"
strager_log_successors_noun = "successor"
strager_log_successor_nodes = "{revset('successors({node}) & !{node}') % '{strager_log_unlabeled_node}'}"

strager_log_public = "{strager_log_public_date}{ifeq(remotebookmarks, '', strager_log_public_without_bookmark, strager_log_public_with_bookmark)}"
strager_log_public_with_bookmark = "{strager_log_maybe_label('strager_log.revision', remotebookmarks)}"
strager_log_public_without_bookmark = "{strager_log_public_node}"
strager_log_public_date = "{strager_log_graph_align(strager_log_date)}"
strager_log_public_node = "{strager_log_maybe_label('strager_log.revision', shortest(node, strager_log_phabricator_revision_width))}"

strager_log_node = "{strager_log_maybe_label('strager_log.revision', strager_log_unlabeled_node)}"
strager_log_unlabeled_node = "{shortest(node, strager_log_node_width)}"
strager_log_node_width = 10

strager_log_phabricator_revision = "{pad(ifeq(phabdiff, '', strager_log_missing_phabricator_revision, strager_log_phabricator_revision_present), strager_log_phabricator_revision_width, ' ')}"
strager_log_phabricator_revision_present = "{strager_log_maybe_label(strager_log_phabricator_revision_label, phabdiff)}"
strager_log_phabricator_revision_label = "{ifeq(phabstatus, 'Landing', 'strager_log.phabricator_revision_landing',
                                           ifeq(phabstatus, 'Accepted', 'strager_log.phabricator_revision_accepted',
                                           ifeq(phabstatus, 'In Preparation', 'strager_log.phabricator_revision_in_preparation',
                                           ifeq(phabstatus, 'Needs Revision', 'strager_log.phabricator_revision_needs_revision',
                                           ifeq(phabstatus, 'Committed', 'strager_log.phabricator_revision_committed',
                                           ifeq(phabstatus, 'Needs Review', 'strager_log.phabricator_revision_in_review',
                                           ifeq(phabstatus, 'Abandoned', 'strager_log.phabricator_revision_abandoned',
                                                'strager_log.phabricator_revision')))))))}"
strager_log_missing_phabricator_revision = "{strager_log_maybe_label('strager_log.missing_phabricator_revision', pad('', strager_log_phabricator_revision_width, 'â”€'))}"
strager_log_phabricator_revision_width = 9

strager_log_date = "{strager_log_maybe_label('strager_log.date', age(date))}"
strager_log_description = "{firstline(desc)}"

strager_log_graph_align(text) = pad(text, strager_log_graph_alignment_width, ' ')
strager_log_graph_alignment_width = strager_log_graph_align_column - graphwidth
strager_log_graph_align_column = 20

strager_log_maybe_label(label_, text) = ifeq(strager_log_top_label, '', label(label_, text), text)

[color]
strager_graphnode.working = magenta
strager_log.abandoned = black
strager_log.committed = black
strager_log.current = magenta
strager_log.date = brightblue
strager_log.description =
strager_log.hidden = black
strager_log.missing_phabricator_revision = black
strager_log.phabricator_revision = brightcyan
strager_log.phabricator_revision_abandoned =
strager_log.phabricator_revision_accepted = green dim
strager_log.phabricator_revision_changes_planned = brightred
strager_log.phabricator_revision_committed =
strager_log.phabricator_revision_in_preparation = brightyellow dim
strager_log.phabricator_revision_in_review = brightcyan
strager_log.phabricator_revision_landing = black
strager_log.phabricator_revision_needs_revision = brightred
strager_log.revision = brightyellow

# Use the default colors for some things, but replace 'bold' with 'bright' for
# familiarity.
diff.diffline = brightcyan
diff.extended = brightcyan
diff.file_a = brightred
diff.file_b = brightgreen
log.changeset = brightblue
status.added = brightgreen
status.deleted = brightcyan underline
status.ignored = brightblack
status.modified = brightblue
status.removed = brightred
status.unknown = brightmagenta underline

# Distinguish descendant processes from selected processes in 'hg
# debugprocesstree'.
processtree.descendants = none
processtree.selected = green
