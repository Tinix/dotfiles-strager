**Breaking change** Allow using Helix with no OAuth token

Some Helix requests work with only a client ID (no OAuth
token). Allow auth-less requests.

This patch is a breaking change. Before, if no token was
provided to Helix.__init__, the token was generated by
asking Twitch. Now, if no token is provided to
Helix.__init__, no token is used.

diff --git a/twitch/helix/helix.py b/twitch/helix/helix.py
index 264daa2..fa6b367 100644
--- a/twitch/helix/helix.py
+++ b/twitch/helix/helix.py
@@ -29,17 +29,10 @@ class Helix:
         """
         self.client_secret: str = client_secret
 
-        if bearer_token is None:
-            if client_id is None and client_secret is None:
-                print("Missing Twitch client id secret")
-
-            bearer_token = requests.post(f"https://id.twitch.tv/oauth2/token"
-                                         f"?client_id={client_id}"
-                                         f"&client_secret={client_secret}"
-                                         "&grant_type=client_credentials").json()['access_token']
-
-        if bearer_token.lower().startswith('bearer'):
-            bearer_token = bearer_token[6:0]
+        if bearer_token is not None:
+            if bearer_token.lower().startswith('bearer'):
+                bearer_token = bearer_token[6:0]
+            bearer_token = 'Bearer ' + bearer_token.lower().strip()
 
         self.api = API(Helix.BASE_URL,
                        client_id=client_id,
@@ -47,7 +40,7 @@ class Helix:
                        use_cache=use_cache,
                        cache_duration=cache_duration,
                        handle_rate_limit=handle_rate_limit,
-                       bearer_token='Bearer ' + bearer_token.lower().strip())
+                       bearer_token=bearer_token)
 
     def users(self, *args) -> 'helix.Users':
         return helix.Users(self.api, *args)
